# Generated by Django 3.2 on 2022-12-20 19:23

import accounts.validators
import colorfield.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_resized.forms
import products.servises
import sorl.thumbnail.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=150, unique=True)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('create_date', models.DateField(auto_now_add=True)),
                ('update_date', models.DateField(auto_now=True)),
                ('image', django_resized.forms.ResizedImageField(crop=None, force_format='JPEG', keep_meta=True, quality=75, scale=0.5, size=[100, 100], upload_to=products.servises.upload_brand_path)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='brand_user', to=settings.AUTH_USER_MODEL, validators=[accounts.validators.is_admin])),
                ('author_data', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='accounts.userdataondelete')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, max_length=250, unique=True)),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('create_date', models.DateField(auto_now_add=True)),
                ('update_date', models.DateField(auto_now=True)),
                ('image', django_resized.forms.ResizedImageField(crop=None, force_format='JPEG', keep_meta=True, quality=75, scale=0.5, size=[400, 500], upload_to=products.servises.upload_category_path)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='category_user', to=settings.AUTH_USER_MODEL, validators=[accounts.validators.is_admin])),
                ('author_data', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='accounts.userdataondelete')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=250, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=300, unique=True)),
                ('description', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('create', models.DateTimeField(auto_now_add=True)),
                ('update', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_user', to=settings.AUTH_USER_MODEL, validators=[accounts.validators.is_admin])),
                ('author_data', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='accounts.userdataondelete')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='products.brand')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='products.category')),
            ],
        ),
        migrations.CreateModel(
            name='ProductColor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=20, unique=True)),
                ('color', colorfield.fields.ColorField(default='#FF0000', image_field=None, max_length=18, samples=None)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='producColor_user', to=settings.AUTH_USER_MODEL, validators=[accounts.validators.is_admin])),
                ('author_data', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='accounts.userdataondelete')),
            ],
        ),
        migrations.CreateModel(
            name='ProductItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, max_length=50, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=300, unique=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=13)),
                ('count_in_stock', models.PositiveSmallIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('create', models.DateTimeField(auto_now_add=True)),
                ('update', models.DateTimeField(auto_now=True)),
                ('image', sorl.thumbnail.fields.ImageField(upload_to=products.servises.upload_protuctItem_path)),
                ('image_small', models.ImageField(blank=True, upload_to=products.servises.upload_protuctItem_small)),
                ('image_medium', models.ImageField(blank=True, upload_to=products.servises.upload_protuctItem_path)),
                ('image_large', models.ImageField(blank=True, upload_to=products.servises.upload_protuctItem_path)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='productItem_user', to=settings.AUTH_USER_MODEL, validators=[accounts.validators.is_admin])),
                ('author_data', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='accounts.userdataondelete')),
                ('color', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='products.productcolor')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='items', to='products.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductStar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('percent', models.CharField(choices=[['one', 1], ['one_half', 1.5], ['two', 2], ['two_half', 2.5], ['three', 3], ['three_half', 3.5], ['four', 4], ['four_half', 4.5], ['five', 5]], default='one', max_length=10)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='productStar_user', to=settings.AUTH_USER_MODEL, validators=[accounts.validators.is_client])),
                ('author_data', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='accounts.userdataondelete')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductSize',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('size', models.CharField(max_length=10, unique=True)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='productSize_user', to=settings.AUTH_USER_MODEL, validators=[accounts.validators.is_admin])),
                ('author_data', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='accounts.userdataondelete')),
            ],
        ),
        migrations.CreateModel(
            name='ProductItemHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateField(auto_now_add=True)),
                ('update_date', models.DateField(auto_now=True)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='productHistory_user', to=settings.AUTH_USER_MODEL, validators=[accounts.validators.is_admin])),
                ('author_data', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='accounts.userdataondelete')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.productitem')),
            ],
        ),
        migrations.AddField(
            model_name='productitem',
            name='size',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='products.productsize'),
        ),
        migrations.CreateModel(
            name='ProductComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateField(auto_now_add=True)),
                ('update_date', models.DateField(auto_now=True)),
                ('text', models.CharField(max_length=300)),
                ('parent', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='products.productcomment')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
